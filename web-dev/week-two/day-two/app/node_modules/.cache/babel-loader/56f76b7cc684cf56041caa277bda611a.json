{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/bootcamp/web-dev/week-two/day-two/app/src/App.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.edit = () => {\n      this.setState({\n        firsttext: React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.firstname,\n          onChange: this.handleFNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }),\n        lasttext: React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.lastname,\n          onChange: this.handleLNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }),\n        buttons: React.createElement(\"button\", {\n          onClick: this.submit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Submit\")\n      });\n    };\n\n    this.submit = event => {\n      this.setState({\n        firstname: event.target.value,\n        lastname: this.state.lastname\n      });\n    };\n\n    this.handleFNameChange = event => {\n      this.setState({\n        firsttext: React.createElement(\"input\", {\n          type: \"text\",\n          value: event.target.value,\n          onChange: this.handleFNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }) //firstname: event.target.value\n\n      });\n    };\n\n    this.handleLNameChange = event => {\n      this.setState({\n        lasttext: React.createElement(\"input\", {\n          type: \"text\",\n          value: event.target.value,\n          onChange: this.handleLNameChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })\n      });\n    };\n\n    this.state = {\n      firstname: \"John\",\n      firsttext: \"John\",\n      lastname: \"Doe\",\n      lasttext: \"Doe\",\n      buttons: React.createElement(\"button\", {\n        onClick: this.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Edit\")\n    };\n    this.handleFNameChange = this.handleFNameChange.bind(this);\n    this.handleLNameChange = this.handleLNameChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.firsttext), React.createElement(\"div\", {\n      id: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.lasttext), React.createElement(\"div\", {\n      id: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.buttons));\n  }\n\n}\n\n;\nForm.propTypes = {\n  firstname: PropTypes.string.isRequired,\n  lastname: PropTypes.string.isRequired\n};\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/bootcamp/web-dev/week-two/day-two/app/src/App.js"],"names":["React","Component","PropTypes","Form","constructor","props","edit","setState","firsttext","state","firstname","handleFNameChange","lasttext","lastname","handleLNameChange","buttons","submit","event","target","value","bind","render","propTypes","string","isRequired","App"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport './App.css';\n\n\nclass Form extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"John\",\n      firsttext: \"John\",\n      lastname: \"Doe\",\n      lasttext: \"Doe\",\n      buttons: <button onClick={this.edit}>Edit</button>\n    };\n    this.handleFNameChange = this.handleFNameChange.bind(this);\n    this.handleLNameChange = this.handleLNameChange.bind(this);\n  }\n\n  edit = () => {\n    this.setState({\n      firsttext: <input type ='text' value={this.state.firstname} onChange={this.handleFNameChange}/>,\n      lasttext: <input type ='text' value={this.state.lastname} onChange={this.handleLNameChange}/>,\n      buttons: <button onClick={this.submit}>Submit</button>\n    });\n  }\n \n  submit = (event) => {\n    this.setState({\n      firstname: event.target.value,\n      lastname: this.state.lastname\n    })\n  }\n  render(){\n    return <div>\n      <div id=\"firstname\">\n        {this.state.firsttext}\n      </div>\n\n      <div id=\"lastname\">\n        {this.state.lasttext}\n      </div>\n\n      <div id=\"buttons\">\n      {/* <button onClick={this.edit}>Edit</button> */}\n      {this.state.buttons}\n      </div>\n\n    </div>\n  }\n  handleFNameChange = (event) => {\n    this.setState({\n       firsttext: <input type ='text' value={event.target.value} onChange={this.handleFNameChange}/>\n      //firstname: event.target.value\n    });\n  }\n\n  handleLNameChange = (event) => {\n    this.setState({\n       lasttext: <input type ='text' value={event.target.value} onChange={this.handleLNameChange}/>\n    });\n  }\n};\n\n\nForm.propTypes = {\n  firstname: PropTypes.string.isRequired,\n  lastname: PropTypes.string.isRequired\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n    <Form />\n\n    </div>\n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}